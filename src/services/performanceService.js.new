import { supabase } from './supabase';
import { mockData } from './mockData';

// Versão do serviço focada em dados mockados, mas preparada para integração futura
export const performanceService = {
  // Obter avaliações que o usuário precisa completar (autoavaliação)
  getAvaliacoesCompletar(userId) {
    const avaliacoes = mockData.avaliacoes.pendentes.filter(av => {
      return av.status_avaliacao === "pendente_autoavaliacao";
    });
    return Promise.resolve(avaliacoes);
  },

  // Obter avaliações pendentes da análise do líder
  getAvaliacoesPendentes(liderId) {
    const avaliacoes = mockData.avaliacoes.pendentes.filter(av => {
      return av.status_avaliacao === "pendente_lider";
    });
    return Promise.resolve(avaliacoes);
  },

  // Criar nova avaliação
  criarNovaAvaliacao(dados) {
    const novaAvaliacao = {
      id: mockData.avaliacoes.pendentes.length + mockData.avaliacoes.emAndamento.length + 1,
      ...dados,
      status_avaliacao: "pendente_autoavaliacao",
      nota_final_calculada: null,
      data_inicio_avaliacao: new Date().toISOString()
    };

    mockData.avaliacoes.pendentes.push(novaAvaliacao);
    return Promise.resolve(novaAvaliacao);
  },

  // Obter todas as avaliações
  getAll() {
    const todasAvaliacoes = [
      ...mockData.avaliacoes.pendentes,
      ...mockData.avaliacoes.emAndamento
    ];

    return Promise.resolve(todasAvaliacoes.map(av => ({
      id: av.id,
      status: av.status_avaliacao,
      nome_colaborador: av.nome_colaborador,
      departamento: av.departamento,
      periodo: av.periodo,
      nota_final: av.nota_final_calculada,
      comentarios_gerais_autoavaliacao: av.comentarios_gerais_autoavaliacao || '',
      comentarios_gerais_lider: av.comentarios_gerais_lider || ''
    })));
  }
};
